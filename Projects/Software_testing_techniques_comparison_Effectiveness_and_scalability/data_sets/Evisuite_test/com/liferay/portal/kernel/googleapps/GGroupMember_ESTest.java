/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 09 00:52:44 GMT 2017
 */

package com.liferay.portal.kernel.googleapps;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.portal.kernel.googleapps.GGroup;
import com.liferay.portal.kernel.googleapps.GGroupMember;
import com.liferay.portal.kernel.googleapps.GUser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GGroupMember_ESTest extends GGroupMember_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GGroupMember gGroupMember0 = new GGroupMember();
      gGroupMember0.setDirect(true);
      boolean boolean0 = gGroupMember0.isDirect();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GGroupMember gGroupMember0 = new GGroupMember();
      gGroupMember0.setType("CN>[=");
      String string0 = gGroupMember0.getType();
      assertEquals("CN>[=", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GGroupMember gGroupMember0 = new GGroupMember();
      gGroupMember0.setType("");
      String string0 = gGroupMember0.getType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GGroupMember gGroupMember0 = new GGroupMember();
      GUser gUser0 = new GUser();
      gUser0.setAgreedToTermsOfUse(true);
      gGroupMember0.setGUser(gUser0);
      GUser gUser1 = gGroupMember0.getGUser();
      assertNull(gUser1.getLastName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GGroupMember gGroupMember0 = new GGroupMember();
      GUser gUser0 = new GUser();
      gUser0.setAdministrator(true);
      gGroupMember0.setGUser(gUser0);
      GUser gUser1 = gGroupMember0.getGUser();
      assertSame(gUser1, gUser0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GGroupMember gGroupMember0 = new GGroupMember();
      GUser gUser0 = new GUser();
      gUser0.setActive(true);
      gGroupMember0.setGUser(gUser0);
      GUser gUser1 = gGroupMember0.getGUser();
      assertNull(gUser1.getFirstName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GGroupMember gGroupMember0 = new GGroupMember();
      GUser gUser0 = new GUser();
      gUser0.setUserId(1565L);
      gGroupMember0.setGUser(gUser0);
      GUser gUser1 = gGroupMember0.getGUser();
      assertFalse(gUser1.isAdministrator());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GGroupMember gGroupMember0 = new GGroupMember();
      GUser gUser0 = new GUser();
      gUser0.setUserId((-1595L));
      gGroupMember0.setGUser(gUser0);
      GUser gUser1 = gGroupMember0.getGUser();
      assertNull(gUser1.getLastName());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GGroupMember gGroupMember0 = new GGroupMember();
      gGroupMember0.setEmailAddress((String) null);
      String string0 = gGroupMember0.getEmailAddress();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GGroupMember gGroupMember0 = new GGroupMember();
      gGroupMember0.setEmailAddress("*");
      String string0 = gGroupMember0.getEmailAddress();
      assertEquals("*", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GGroupMember gGroupMember0 = new GGroupMember();
      assertFalse(gGroupMember0.isEveryone());
      
      gGroupMember0.setEmailAddress("*");
      boolean boolean0 = gGroupMember0.isEveryone();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GGroupMember gGroupMember0 = new GGroupMember();
      boolean boolean0 = gGroupMember0.isEveryone();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GGroupMember gGroupMember0 = new GGroupMember();
      GGroup gGroup0 = new GGroup();
      gGroupMember0.setGGroup(gGroup0);
      GGroup gGroup1 = gGroupMember0.getGGroup();
      assertNull(gGroup1.getEmailAddress());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GGroupMember gGroupMember0 = new GGroupMember();
      gGroupMember0.setEmailAddress((String) null);
      // Undeclared exception!
      try { 
        gGroupMember0.isEveryone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GGroupMember gGroupMember0 = new GGroupMember();
      String string0 = gGroupMember0.getEmailAddress();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GGroupMember gGroupMember0 = new GGroupMember();
      GUser gUser0 = gGroupMember0.getGUser();
      assertNull(gUser0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GGroupMember gGroupMember0 = new GGroupMember();
      String string0 = gGroupMember0.getType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GGroupMember gGroupMember0 = new GGroupMember();
      GGroup gGroup0 = gGroupMember0.getGGroup();
      assertNull(gGroup0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GGroupMember gGroupMember0 = new GGroupMember();
      boolean boolean0 = gGroupMember0.isDirect();
      assertFalse(boolean0);
  }
}
