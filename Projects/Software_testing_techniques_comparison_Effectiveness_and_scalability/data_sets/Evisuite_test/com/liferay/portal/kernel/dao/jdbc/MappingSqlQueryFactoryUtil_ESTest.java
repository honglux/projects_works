/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 09 00:13:46 GMT 2017
 */

package com.liferay.portal.kernel.dao.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.portal.kernel.dao.jdbc.MappingSqlQueryFactory;
import com.liferay.portal.kernel.dao.jdbc.MappingSqlQueryFactoryUtil;
import com.liferay.portal.kernel.dao.jdbc.RowMapper;
import javax.sql.DataSource;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MappingSqlQueryFactoryUtil_ESTest extends MappingSqlQueryFactoryUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MappingSqlQueryFactory mappingSqlQueryFactory0 = MappingSqlQueryFactoryUtil.getMappingSqlQueryFactory();
      assertNull(mappingSqlQueryFactory0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        MappingSqlQueryFactoryUtil.getMappingSqlQuery((DataSource) null, "", intArray0, (RowMapper<Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.dao.jdbc.MappingSqlQueryFactoryUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MappingSqlQueryFactoryUtil mappingSqlQueryFactoryUtil0 = new MappingSqlQueryFactoryUtil();
      mappingSqlQueryFactoryUtil0.setMappingSqlQueryFactory((MappingSqlQueryFactory) null);
  }
}
