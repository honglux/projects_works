/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 09 00:45:57 GMT 2017
 */

package com.liferay.portal.kernel.deploy.sandbox;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.portal.kernel.deploy.sandbox.SandboxDeployDir;
import com.liferay.portal.kernel.deploy.sandbox.SandboxDeployListener;
import com.liferay.portal.kernel.deploy.sandbox.SandboxDeployUtil;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SandboxDeployUtil_ESTest extends SandboxDeployUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        SandboxDeployUtil.registerDir((SandboxDeployDir) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.deploy.sandbox.SandboxDeployUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SandboxDeployDir sandboxDeployDir0 = SandboxDeployUtil.getDir("");
      assertNull(sandboxDeployDir0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockFile mockFile0 = new MockFile("*36326:5aFUG[nb/pR");
      LinkedList<SandboxDeployListener> linkedList0 = new LinkedList<SandboxDeployListener>();
      SandboxDeployDir sandboxDeployDir0 = new SandboxDeployDir("*36326:5aFUG[nb/pR", mockFile0, 0L, linkedList0);
      SandboxDeployUtil.registerDir(sandboxDeployDir0);
      assertEquals("*36326:5aFUG[nb/pR", sandboxDeployDir0.getName());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SandboxDeployUtil.unregisterDir("");
  }
}
