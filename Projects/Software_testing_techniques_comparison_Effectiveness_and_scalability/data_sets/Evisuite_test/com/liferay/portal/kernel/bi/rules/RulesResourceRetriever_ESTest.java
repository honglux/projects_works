/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 08 23:13:58 GMT 2017
 */

package com.liferay.portal.kernel.bi.rules;

import org.junit.Test;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.bi.rules.RulesResourceRetriever;
import com.liferay.portal.kernel.resource.ContextClassLoaderResourceRetriever;
import com.liferay.portal.kernel.resource.ResourceRetriever;
import com.liferay.portal.kernel.resource.StringResourceRetriever;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RulesResourceRetriever_ESTest extends RulesResourceRetriever_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RulesResourceRetriever rulesResourceRetriever0 = new RulesResourceRetriever("i-)");
      String string0 = rulesResourceRetriever0.getRulesLanguage();
      assertEquals("i-)", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ContextClassLoaderResourceRetriever contextClassLoaderResourceRetriever0 = new ContextClassLoaderResourceRetriever("Sm?s&^ nu?Q");
      RulesResourceRetriever rulesResourceRetriever0 = new RulesResourceRetriever(contextClassLoaderResourceRetriever0, "Sm?s&^ nu?Q");
      assertEquals("Sm?s&^ nu?Q", rulesResourceRetriever0.getRulesLanguage());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RulesResourceRetriever rulesResourceRetriever0 = new RulesResourceRetriever((ResourceRetriever) null, (String) null);
      Set<ResourceRetriever> set0 = rulesResourceRetriever0.getResourceRetrievers();
      assertEquals(0, set0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RulesResourceRetriever rulesResourceRetriever0 = new RulesResourceRetriever((ResourceRetriever) null, (String) null);
      rulesResourceRetriever0.addResourceRetriever((ResourceRetriever) null);
      Set<ResourceRetriever> set0 = rulesResourceRetriever0.getResourceRetrievers();
      assertFalse(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RulesResourceRetriever rulesResourceRetriever0 = new RulesResourceRetriever("");
      String string0 = rulesResourceRetriever0.getRulesLanguage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StringResourceRetriever stringResourceRetriever0 = new StringResourceRetriever("");
      RulesResourceRetriever rulesResourceRetriever0 = new RulesResourceRetriever(stringResourceRetriever0);
      assertNull(rulesResourceRetriever0.getRulesLanguage());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RulesResourceRetriever rulesResourceRetriever0 = new RulesResourceRetriever((ResourceRetriever) null, (String) null);
      String string0 = rulesResourceRetriever0.getRulesLanguage();
      assertNull(string0);
  }
}
