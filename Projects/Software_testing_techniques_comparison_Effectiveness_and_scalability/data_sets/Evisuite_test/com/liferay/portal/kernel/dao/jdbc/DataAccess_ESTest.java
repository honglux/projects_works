/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 09 00:12:37 GMT 2017
 */

package com.liferay.portal.kernel.dao.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.portal.kernel.dao.jdbc.DataAccess;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DataAccess_ESTest extends DataAccess_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      DataAccess.cleanUp(statement0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      DataAccess.cleanUp(resultSet0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DataAccess.cleanUp((Connection) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DataAccess.cleanUp((Statement) null);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DataAccess.cleanUp((ResultSet) null);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        DataAccess.getConnection("@]5a!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.dao.jdbc.DataAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DataAccess dataAccess0 = new DataAccess();
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try { 
        DataAccess.getConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.dao.jdbc.DataAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      DataAccess.cleanUp((Connection) null, statement0, resultSet0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      DataAccess.cleanUp((Connection) null, statement0);
  }
}
