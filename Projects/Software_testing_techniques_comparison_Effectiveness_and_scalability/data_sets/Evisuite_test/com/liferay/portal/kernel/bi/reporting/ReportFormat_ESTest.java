/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 08 23:07:11 GMT 2017
 */

package com.liferay.portal.kernel.bi.reporting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.portal.kernel.bi.reporting.ReportFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReportFormat_ESTest extends ReportFormat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ReportFormat reportFormat0 = ReportFormat.parse("html");
      assertEquals("html", reportFormat0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ReportFormat[] reportFormatArray0 = ReportFormat.values();
      assertNotNull(reportFormatArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ReportFormat reportFormat0 = ReportFormat.valueOf("HTML");
      assertEquals("html", reportFormat0.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ReportFormat reportFormat0 = ReportFormat.XML;
      String string0 = reportFormat0.toString();
      assertEquals("xml", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ReportFormat reportFormat0 = ReportFormat.parse("PDF");
      assertEquals("pdf", reportFormat0.toString());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReportFormat.parse("eyeel");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid format eyeel
         //
         verifyException("com.liferay.portal.kernel.bi.reporting.ReportFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ReportFormat reportFormat0 = ReportFormat.parse("EXCEL");
      assertEquals("excel", reportFormat0.toString());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ReportFormat reportFormat0 = ReportFormat.parse("excel");
      assertEquals("excel", reportFormat0.toString());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ReportFormat reportFormat0 = ReportFormat.parse("HTML");
      assertEquals("html", reportFormat0.toString());
  }
}
