/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 09 00:18:16 GMT 2017
 */

package com.liferay.portal.kernel.dao.orm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.portal.kernel.dao.orm.CustomSQLParam;
import com.liferay.portal.kernel.dao.orm.Query;
import com.liferay.portal.kernel.dao.orm.QueryPos;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CustomSQLParam_ESTest extends CustomSQLParam_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Long long0 = new Long(102L);
      CustomSQLParam customSQLParam0 = new CustomSQLParam("yL @p]A$DFg", long0);
      String string0 = customSQLParam0.getSQL();
      assertEquals("yL @p]A$DFg", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Long long0 = new Long(2797L);
      CustomSQLParam customSQLParam0 = new CustomSQLParam("", long0);
      String string0 = customSQLParam0.getSQL();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CustomSQLParam customSQLParam0 = new CustomSQLParam("r", "r");
      // Undeclared exception!
      try { 
        customSQLParam0.process((QueryPos) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.dao.orm.CustomSQLParam", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object object0 = new Object();
      CustomSQLParam customSQLParam0 = new CustomSQLParam("|\"-63]", object0);
      QueryPos queryPos0 = QueryPos.getInstance((Query) null);
      customSQLParam0.process(queryPos0);
      assertEquals(0, queryPos0.getPos());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Long long0 = new Long(102L);
      CustomSQLParam customSQLParam0 = new CustomSQLParam("yL @p]A$DFg", long0);
      // Undeclared exception!
      try { 
        customSQLParam0.process((QueryPos) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.dao.orm.CustomSQLParam", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Long long0 = new Long(0L);
      CustomSQLParam customSQLParam0 = new CustomSQLParam("lW)d5>Hr>F", long0);
      Query query0 = mock(Query.class, new ViolatedAssumptionAnswer());
      QueryPos queryPos0 = QueryPos.getInstance(query0);
      customSQLParam0.process(queryPos0);
      assertEquals(0, queryPos0.getPos());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CustomSQLParam customSQLParam0 = new CustomSQLParam("", "");
      customSQLParam0.process((QueryPos) null);
      assertEquals("", customSQLParam0.getSQL());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CustomSQLParam customSQLParam0 = new CustomSQLParam((String) null, "");
      String string0 = customSQLParam0.getSQL();
      assertNull(string0);
  }
}
