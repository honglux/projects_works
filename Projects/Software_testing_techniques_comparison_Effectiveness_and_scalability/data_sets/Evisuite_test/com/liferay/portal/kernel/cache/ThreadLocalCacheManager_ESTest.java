/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 08 23:32:40 GMT 2017
 */

package com.liferay.portal.kernel.cache;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.portal.kernel.cache.Lifecycle;
import com.liferay.portal.kernel.cache.ThreadLocalCache;
import com.liferay.portal.kernel.cache.ThreadLocalCacheManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ThreadLocalCacheManager_ESTest extends ThreadLocalCacheManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        ThreadLocalCacheManager.getThreadLocalCache((Lifecycle) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Lifecycle lifecycle0 = Lifecycle.SESSION;
      ThreadLocalCacheManager threadLocalCacheManager0 = new ThreadLocalCacheManager();
      ThreadLocalCacheManager.clearAll(lifecycle0);
      ThreadLocalCache<Integer> threadLocalCache0 = ThreadLocalCacheManager.getThreadLocalCache(lifecycle0, "C");
      assertEquals(Lifecycle.SESSION, threadLocalCache0.getLifecycle());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Lifecycle lifecycle0 = Lifecycle.SESSION;
      ThreadLocalCache<Integer> threadLocalCache0 = ThreadLocalCacheManager.getThreadLocalCache(lifecycle0, "C");
      assertEquals(Lifecycle.SESSION, threadLocalCache0.getLifecycle());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Lifecycle lifecycle0 = Lifecycle.SESSION;
      ThreadLocalCacheManager threadLocalCacheManager0 = new ThreadLocalCacheManager();
      ThreadLocalCacheManager.clearAll(lifecycle0);
      ThreadLocalCacheManager.destroy();
      ThreadLocalCacheManager.clearAll(lifecycle0);
  }
}
