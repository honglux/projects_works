/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 08 22:58:39 GMT 2017
 */

package com.liferay.portal.kernel.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.portal.kernel.bean.ReadOnlyBeanHandler;
import java.lang.reflect.Method;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReadOnlyBeanHandler_ESTest extends ReadOnlyBeanHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      ReadOnlyBeanHandler readOnlyBeanHandler0 = new ReadOnlyBeanHandler(object0);
      Object object1 = readOnlyBeanHandler0.getBean();
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      ReadOnlyBeanHandler readOnlyBeanHandler0 = new ReadOnlyBeanHandler(object0);
      try { 
        readOnlyBeanHandler0.invoke((Object) null, (Method) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.bean.ReadOnlyBeanHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ReadOnlyBeanHandler readOnlyBeanHandler0 = new ReadOnlyBeanHandler((Object) null);
      Object object0 = readOnlyBeanHandler0.getBean();
      assertNull(object0);
  }
}
