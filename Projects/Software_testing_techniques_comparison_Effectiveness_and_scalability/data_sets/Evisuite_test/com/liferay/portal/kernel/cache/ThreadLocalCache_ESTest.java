/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 08 23:31:32 GMT 2017
 */

package com.liferay.portal.kernel.cache;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.portal.kernel.cache.Lifecycle;
import com.liferay.portal.kernel.cache.ThreadLocalCache;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ThreadLocalCache_ESTest extends ThreadLocalCache_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Lifecycle lifecycle0 = Lifecycle.REQUEST;
      ThreadLocalCache<Integer> threadLocalCache0 = new ThreadLocalCache<Integer>("ETERNAL", lifecycle0);
      Integer integer0 = new Integer((-19));
      threadLocalCache0.put("ETERNAL", integer0);
      String string0 = threadLocalCache0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Lifecycle lifecycle0 = Lifecycle.SESSION;
      ThreadLocalCache<Object> threadLocalCache0 = new ThreadLocalCache<Object>((String) null, lifecycle0);
      String string0 = threadLocalCache0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Lifecycle lifecycle0 = Lifecycle.REQUEST;
      ThreadLocalCache<String> threadLocalCache0 = new ThreadLocalCache<String>("", lifecycle0);
      String string0 = threadLocalCache0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Lifecycle lifecycle0 = Lifecycle.REQUEST;
      ThreadLocalCache<String> threadLocalCache0 = new ThreadLocalCache<String>("ETERNAL", lifecycle0);
      Lifecycle lifecycle1 = threadLocalCache0.getLifecycle();
      assertSame(lifecycle0, lifecycle1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Lifecycle lifecycle0 = Lifecycle.REQUEST;
      ThreadLocalCache<Object> threadLocalCache0 = new ThreadLocalCache<Object>("CA$S5&]", lifecycle0);
      Object object0 = new Object();
      threadLocalCache0.put("", object0);
      Object object1 = threadLocalCache0.get("");
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ThreadLocalCache<Integer> threadLocalCache0 = new ThreadLocalCache<Integer>((String) null, (Lifecycle) null);
      Integer integer0 = new Integer(0);
      threadLocalCache0.put("com.liferay.portal.kernel.cache.Lifecycle", integer0);
      threadLocalCache0.removeAll();
      assertNull(threadLocalCache0.getName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Lifecycle lifecycle0 = Lifecycle.REQUEST;
      ThreadLocalCache<Object> threadLocalCache0 = new ThreadLocalCache<Object>("{cache=java.util.HashMap@0000000003, lifecycle=null, name=null}", lifecycle0);
      threadLocalCache0.removeAll();
      assertEquals(Lifecycle.REQUEST, threadLocalCache0.getLifecycle());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Lifecycle lifecycle0 = Lifecycle.REQUEST;
      ThreadLocalCache<String> threadLocalCache0 = new ThreadLocalCache<String>("com.liferay.portal.kernel.cache.Lifecycle", lifecycle0);
      threadLocalCache0.put("{cache=java.util.HashMap@0000000003, lifecycle=null, name=null}", "{cache=java.util.HashMap@0000000003, lifecycle=null, name=null}");
      threadLocalCache0.remove("com.liferay.portal.kernel.cache.Lifecycle");
      assertEquals(Lifecycle.REQUEST, threadLocalCache0.getLifecycle());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Lifecycle lifecycle0 = Lifecycle.REQUEST;
      ThreadLocalCache<String> threadLocalCache0 = new ThreadLocalCache<String>("com.liferay.portal.kernel.cache.Lifecycle", lifecycle0);
      threadLocalCache0.remove("com.liferay.portal.kernel.cache.Lifecycle");
      assertEquals("com.liferay.portal.kernel.cache.Lifecycle", threadLocalCache0.getName());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Lifecycle lifecycle0 = Lifecycle.REQUEST;
      ThreadLocalCache<String> threadLocalCache0 = new ThreadLocalCache<String>("com.liferay.portal.kernel.cache.Lifecycle", lifecycle0);
      threadLocalCache0.put("{cache=java.util.HashMap@0000000003, lifecycle=null, name=null}", "{cache=java.util.HashMap@0000000003, lifecycle=null, name=null}");
      threadLocalCache0.put("{cache=java.util.HashMap@0000000003, lifecycle=null, name=null}", "com.liferay.portal.kernel.cache.Lifecycle");
      assertEquals("com.liferay.portal.kernel.cache.Lifecycle", threadLocalCache0.getName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Lifecycle lifecycle0 = Lifecycle.REQUEST;
      ThreadLocalCache<Object> threadLocalCache0 = new ThreadLocalCache<Object>("{cache=java.util.HashMap@0000000003, lifecycle=null, name=null}", lifecycle0);
      Object object0 = threadLocalCache0.get("{cache=java.util.HashMap@0000000003, lifecycle=null, name=null}");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Lifecycle lifecycle0 = Lifecycle.REQUEST;
      ThreadLocalCache<String> threadLocalCache0 = new ThreadLocalCache<String>("com.liferay.portal.kernel.cache.Lifecycle", lifecycle0);
      String string0 = threadLocalCache0.getName();
      assertEquals("com.liferay.portal.kernel.cache.Lifecycle", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ThreadLocalCache<Integer> threadLocalCache0 = new ThreadLocalCache<Integer>((String) null, (Lifecycle) null);
      // Undeclared exception!
      try { 
        threadLocalCache0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ThreadLocalCache<Integer> threadLocalCache0 = new ThreadLocalCache<Integer>((String) null, (Lifecycle) null);
      threadLocalCache0.getLifecycle();
  }
}
