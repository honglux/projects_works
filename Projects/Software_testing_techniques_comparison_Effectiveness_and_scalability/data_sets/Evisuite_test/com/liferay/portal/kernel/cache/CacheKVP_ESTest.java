/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 08 23:17:45 GMT 2017
 */

package com.liferay.portal.kernel.cache;

import org.junit.Test;
import static org.junit.Assert.*;
import com.liferay.portal.kernel.cache.CacheKVP;
import java.io.Serializable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CacheKVP_ESTest extends CacheKVP_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<String> class0 = String.class;
      CacheKVP cacheKVP0 = new CacheKVP(class0, (Serializable) null);
      Serializable serializable0 = cacheKVP0.getPrimaryKeyObj();
      assertNull(serializable0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<String> class0 = String.class;
      CacheKVP cacheKVP0 = new CacheKVP(class0, (Serializable) null);
      Class<?> class1 = cacheKVP0.getModelClass();
      assertFalse(class1.isInterface());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<String> class0 = String.class;
      CacheKVP cacheKVP0 = new CacheKVP((Class<?>) null, class0);
      Class class1 = (Class)cacheKVP0.getPrimaryKeyObj();
      assertFalse(class1.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<String> class0 = String.class;
      CacheKVP cacheKVP0 = new CacheKVP((Class<?>) null, class0);
      Class<?> class1 = cacheKVP0.getModelClass();
      assertNull(class1);
  }
}
