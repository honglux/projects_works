/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 08 23:12:43 GMT 2017
 */

package com.liferay.portal.kernel.bi.rules;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.portal.kernel.bi.rules.RulesEngine;
import com.liferay.portal.kernel.bi.rules.RulesEngineUtil;
import com.liferay.portal.kernel.bi.rules.RulesResourceRetriever;
import com.liferay.portal.kernel.resource.ContextClassLoaderResourceRetriever;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RulesEngineUtil_ESTest extends RulesEngineUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RulesEngineUtil rulesEngineUtil0 = new RulesEngineUtil();
      RulesEngine rulesEngine0 = mock(RulesEngine.class, new ViolatedAssumptionAnswer());
      rulesEngineUtil0.setRulesEngine(rulesEngine0);
      ContextClassLoaderResourceRetriever contextClassLoaderResourceRetriever0 = new ContextClassLoaderResourceRetriever("h-Q 5-{W*`n+DQ3&");
      RulesResourceRetriever rulesResourceRetriever0 = new RulesResourceRetriever(contextClassLoaderResourceRetriever0, "h-Q 5-{W*`n+DQ3&");
      RulesEngineUtil.update("h-Q 5-{W*`n+DQ3&", rulesResourceRetriever0, (ClassLoader[]) null);
      assertEquals("h-Q 5-{W*`n+DQ3&", rulesResourceRetriever0.getRulesLanguage());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RulesEngineUtil rulesEngineUtil0 = new RulesEngineUtil();
      RulesEngine rulesEngine0 = mock(RulesEngine.class, new ViolatedAssumptionAnswer());
      rulesEngineUtil0.setRulesEngine(rulesEngine0);
      ContextClassLoaderResourceRetriever contextClassLoaderResourceRetriever0 = new ContextClassLoaderResourceRetriever("h-Q 5-{W*`n+DQ3&");
      RulesResourceRetriever rulesResourceRetriever0 = new RulesResourceRetriever(contextClassLoaderResourceRetriever0, "h-Q 5-{W*`n+DQ3&");
      RulesEngineUtil.update("h-Q 5-{W*`n+DQ3&", rulesResourceRetriever0);
      assertEquals("h-Q 5-{W*`n+DQ3&", rulesResourceRetriever0.getRulesLanguage());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RulesEngineUtil rulesEngineUtil0 = new RulesEngineUtil();
      RulesEngine rulesEngine0 = mock(RulesEngine.class, new ViolatedAssumptionAnswer());
      rulesEngineUtil0.setRulesEngine(rulesEngine0);
      RulesEngineUtil.remove((String) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RulesEngineUtil rulesEngineUtil0 = new RulesEngineUtil();
      RulesEngine rulesEngine0 = mock(RulesEngine.class, new ViolatedAssumptionAnswer());
      rulesEngineUtil0.setRulesEngine(rulesEngine0);
      ContextClassLoaderResourceRetriever contextClassLoaderResourceRetriever0 = new ContextClassLoaderResourceRetriever("h-Q 5-{W*`n+DQ3&");
      RulesResourceRetriever rulesResourceRetriever0 = new RulesResourceRetriever(contextClassLoaderResourceRetriever0, "h-Q 5-{W*`n+DQ3&");
      RulesEngineUtil.add("h-Q 5-{W*`n+DQ3&", rulesResourceRetriever0, (ClassLoader[]) null);
      assertEquals("h-Q 5-{W*`n+DQ3&", rulesResourceRetriever0.getRulesLanguage());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RulesEngineUtil rulesEngineUtil0 = new RulesEngineUtil();
      RulesEngine rulesEngine0 = mock(RulesEngine.class, new ViolatedAssumptionAnswer());
      rulesEngineUtil0.setRulesEngine(rulesEngine0);
      ContextClassLoaderResourceRetriever contextClassLoaderResourceRetriever0 = new ContextClassLoaderResourceRetriever("h-Q 5-{W*`n+DQ3&");
      RulesResourceRetriever rulesResourceRetriever0 = new RulesResourceRetriever(contextClassLoaderResourceRetriever0, "h-Q 5-{W*`n+DQ3&");
      RulesEngineUtil.add("h-Q 5-{W*`n+DQ3&", rulesResourceRetriever0);
      assertEquals("h-Q 5-{W*`n+DQ3&", rulesResourceRetriever0.getRulesLanguage());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RulesEngineUtil rulesEngineUtil0 = new RulesEngineUtil();
      RulesEngine rulesEngine0 = mock(RulesEngine.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(rulesEngine0).containsRuleDomain(anyString());
      rulesEngineUtil0.setRulesEngine(rulesEngine0);
      boolean boolean0 = RulesEngineUtil.containsRuleDomain("h-Q 5-{W*`n+DQ3&");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RulesEngineUtil rulesEngineUtil0 = new RulesEngineUtil();
      RulesEngine rulesEngine0 = mock(RulesEngine.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(rulesEngine0).containsRuleDomain(anyString());
      rulesEngineUtil0.setRulesEngine(rulesEngine0);
      boolean boolean0 = RulesEngineUtil.containsRuleDomain("~2TeKT");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ContextClassLoaderResourceRetriever contextClassLoaderResourceRetriever0 = new ContextClassLoaderResourceRetriever("h-Q 5-{W*`n+DQ3&");
      RulesResourceRetriever rulesResourceRetriever0 = new RulesResourceRetriever(contextClassLoaderResourceRetriever0, "h-Q 5-{W*`n+DQ3&");
      // Undeclared exception!
      try { 
        RulesEngineUtil.update("h-Q 5-{W*`n+DQ3&", rulesResourceRetriever0, (ClassLoader[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.bi.rules.RulesEngineUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ContextClassLoaderResourceRetriever contextClassLoaderResourceRetriever0 = new ContextClassLoaderResourceRetriever("h-Q 5-{W*`n+DQ3&");
      RulesResourceRetriever rulesResourceRetriever0 = new RulesResourceRetriever(contextClassLoaderResourceRetriever0, "h-Q 5-{W*`n+DQ3&");
      // Undeclared exception!
      try { 
        RulesEngineUtil.add("h-Q 5-{W*`n+DQ3&", rulesResourceRetriever0, (ClassLoader[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.bi.rules.RulesEngineUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ContextClassLoaderResourceRetriever contextClassLoaderResourceRetriever0 = new ContextClassLoaderResourceRetriever("h-Q 5-{W*`n+DQ3&");
      RulesResourceRetriever rulesResourceRetriever0 = new RulesResourceRetriever(contextClassLoaderResourceRetriever0, "h-Q 5-{W*`n+DQ3&");
      // Undeclared exception!
      try { 
        RulesEngineUtil.update("h-Q 5-{W*`n+DQ3&", rulesResourceRetriever0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.bi.rules.RulesEngineUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        RulesEngineUtil.remove((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.bi.rules.RulesEngineUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        RulesEngineUtil.containsRuleDomain("~2TeKT");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.bi.rules.RulesEngineUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ContextClassLoaderResourceRetriever contextClassLoaderResourceRetriever0 = new ContextClassLoaderResourceRetriever("h-Q 5-{W*`n+DQ3&");
      RulesResourceRetriever rulesResourceRetriever0 = new RulesResourceRetriever(contextClassLoaderResourceRetriever0, "h-Q 5-{W*`n+DQ3&");
      // Undeclared exception!
      try { 
        RulesEngineUtil.add("h-Q 5-{W*`n+DQ3&", rulesResourceRetriever0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.bi.rules.RulesEngineUtil", e);
      }
  }
}
