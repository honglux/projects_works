/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 09 00:39:28 GMT 2017
 */

package com.liferay.portal.kernel.deploy.auto;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.portal.kernel.deploy.auto.AutoDeployDir;
import com.liferay.portal.kernel.deploy.auto.AutoDeployListener;
import com.liferay.portal.kernel.deploy.auto.AutoDeployUtil;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AutoDeployUtil_ESTest extends AutoDeployUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AutoDeployDir autoDeployDir0 = AutoDeployUtil.getDir("com.liferay.portal.kernel.util.PrimitiveWrapper");
      assertNull(autoDeployDir0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        AutoDeployUtil.registerDir((AutoDeployDir) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.kernel.deploy.auto.AutoDeployUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AutoDeployUtil.unregisterDir("com.liferay.portal.kernel.util.PrimitiveWrapper");
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Dn5t$S", "Dn5t$S");
      LinkedList<AutoDeployListener> linkedList0 = new LinkedList<AutoDeployListener>();
      AutoDeployDir autoDeployDir0 = new AutoDeployDir("Dn5t$S", mockFile0, mockFile0, 0L, (-590), linkedList0);
      AutoDeployUtil.registerDir(autoDeployDir0);
      assertEquals(0L, autoDeployDir0.getInterval());
  }
}
