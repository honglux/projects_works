/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 08 22:27:54 GMT 2017
 */

package com.liferay.counter.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.counter.model.Counter;
import com.liferay.counter.model.CounterWrapper;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portlet.expando.model.ExpandoBridge;
import java.io.Serializable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CounterWrapper_ESTest extends CounterWrapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn("com.lifera.cunter.modeL.CountIrWrapper").when(counter0).toXmlString();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      String string0 = counterWrapper0.toXmlString();
      assertEquals("com.lifera.cunter.modeL.CountIrWrapper", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn("").when(counter0).toXmlString();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      String string0 = counterWrapper0.toXmlString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      Counter counter1 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn(counterWrapper0).when(counter1).toEscapedModel();
      CounterWrapper counterWrapper1 = new CounterWrapper(counter1);
      Counter counter2 = counterWrapper1.toEscapedModel();
      assertSame(counterWrapper0, counter2);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(counter0).isNew();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      boolean boolean0 = counterWrapper0.isNew();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(counter0).isEscapedModel();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      boolean boolean0 = counterWrapper0.isEscapedModel();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(counter0).isCachedModel();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      boolean boolean0 = counterWrapper0.isCachedModel();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(counter0).isCachedModel();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      boolean boolean0 = counterWrapper0.isCachedModel();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CounterWrapper counterWrapper0 = new CounterWrapper((Counter) null);
      Counter counter0 = counterWrapper0.getWrappedCounter();
      assertNull(counter0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn((Serializable) null).when(counter0).getPrimaryKeyObj();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      Serializable serializable0 = counterWrapper0.getPrimaryKeyObj();
      assertNull(serializable0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn("mY[").when(counter0).getPrimaryKey();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      String string0 = counterWrapper0.getPrimaryKey();
      assertEquals("mY[", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn("").when(counter0).getPrimaryKey();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      String string0 = counterWrapper0.getPrimaryKey();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn("com.liferay.counter.model.CounterWrapper").when(counter0).getName();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      String string0 = counterWrapper0.getName();
      assertEquals("com.liferay.counter.model.CounterWrapper", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn("").when(counter0).getName();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      String string0 = counterWrapper0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn(2319L).when(counter0).getCurrentId();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      long long0 = counterWrapper0.getCurrentId();
      assertEquals(2319L, long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn((-182L)).when(counter0).getCurrentId();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      long long0 = counterWrapper0.getCurrentId();
      assertEquals((-182L), long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(counter0).compareTo(any(com.liferay.counter.model.Counter.class));
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      int int0 = counterWrapper0.compareTo((Counter) null);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      Counter counter1 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn((-3275)).when(counter1).compareTo(any(com.liferay.counter.model.Counter.class));
      CounterWrapper counterWrapper1 = new CounterWrapper(counter1);
      int int0 = counterWrapper1.compareTo((Counter) counterWrapper0);
      assertEquals((-3275), int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CounterWrapper counterWrapper0 = new CounterWrapper((Counter) null);
      // Undeclared exception!
      try { 
        counterWrapper0.toXmlString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.counter.model.CounterWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CounterWrapper counterWrapper0 = new CounterWrapper((Counter) null);
      // Undeclared exception!
      try { 
        counterWrapper0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CounterWrapper counterWrapper0 = new CounterWrapper((Counter) null);
      // Undeclared exception!
      try { 
        counterWrapper0.toEscapedModel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.counter.model.CounterWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CounterWrapper counterWrapper0 = new CounterWrapper((Counter) null);
      // Undeclared exception!
      try { 
        counterWrapper0.setPrimaryKey("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.counter.model.CounterWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CounterWrapper counterWrapper0 = new CounterWrapper((Counter) null);
      // Undeclared exception!
      try { 
        counterWrapper0.setNew(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.counter.model.CounterWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CounterWrapper counterWrapper0 = new CounterWrapper((Counter) null);
      // Undeclared exception!
      try { 
        counterWrapper0.setName(")&x;3|.mu+qn");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.counter.model.CounterWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CounterWrapper counterWrapper0 = new CounterWrapper((Counter) null);
      ServiceContext serviceContext0 = new ServiceContext();
      // Undeclared exception!
      try { 
        counterWrapper0.setExpandoBridgeAttributes(serviceContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.counter.model.CounterWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CounterWrapper counterWrapper0 = new CounterWrapper((Counter) null);
      // Undeclared exception!
      try { 
        counterWrapper0.setEscapedModel(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.counter.model.CounterWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CounterWrapper counterWrapper0 = new CounterWrapper((Counter) null);
      // Undeclared exception!
      try { 
        counterWrapper0.setCurrentId(1263L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.counter.model.CounterWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CounterWrapper counterWrapper0 = new CounterWrapper((Counter) null);
      // Undeclared exception!
      try { 
        counterWrapper0.setCachedModel(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.counter.model.CounterWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CounterWrapper counterWrapper0 = new CounterWrapper((Counter) null);
      // Undeclared exception!
      try { 
        counterWrapper0.isNew();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.counter.model.CounterWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CounterWrapper counterWrapper0 = new CounterWrapper((Counter) null);
      // Undeclared exception!
      try { 
        counterWrapper0.isEscapedModel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.counter.model.CounterWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CounterWrapper counterWrapper0 = new CounterWrapper((Counter) null);
      // Undeclared exception!
      try { 
        counterWrapper0.getPrimaryKeyObj();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.counter.model.CounterWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CounterWrapper counterWrapper0 = new CounterWrapper((Counter) null);
      // Undeclared exception!
      try { 
        counterWrapper0.getPrimaryKey();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.counter.model.CounterWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CounterWrapper counterWrapper0 = new CounterWrapper((Counter) null);
      // Undeclared exception!
      try { 
        counterWrapper0.getName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.counter.model.CounterWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CounterWrapper counterWrapper0 = new CounterWrapper((Counter) null);
      // Undeclared exception!
      try { 
        counterWrapper0.getExpandoBridge();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.counter.model.CounterWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CounterWrapper counterWrapper0 = new CounterWrapper((Counter) null);
      // Undeclared exception!
      try { 
        counterWrapper0.getCurrentId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.counter.model.CounterWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CounterWrapper counterWrapper0 = new CounterWrapper((Counter) null);
      // Undeclared exception!
      try { 
        counterWrapper0.compareTo((Counter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.counter.model.CounterWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CounterWrapper counterWrapper0 = new CounterWrapper((Counter) null);
      // Undeclared exception!
      try { 
        counterWrapper0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.counter.model.CounterWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      counterWrapper0.setCurrentId(0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      counterWrapper0.setName(">N3&z^1)A*o");
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      counterWrapper0.setPrimaryKey("[ P,jn;{OPOY{B*!cL?");
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(counter0).getPrimaryKey();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      String string0 = counterWrapper0.getPrimaryKey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn("").when(counter0).getPrimaryKeyObj();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      Serializable serializable0 = counterWrapper0.getPrimaryKeyObj();
      assertEquals("", serializable0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      ServiceContext serviceContext0 = new ServiceContext();
      counterWrapper0.setExpandoBridgeAttributes(serviceContext0);
      assertNull(serviceContext0.getPathMain());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      counterWrapper0.setCachedModel(false);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      counterWrapper0.setEscapedModel(false);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(counter0).isNew();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      boolean boolean0 = counterWrapper0.isNew();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn((Counter) null).when(counter0).toEscapedModel();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      Counter counter1 = counterWrapper0.toEscapedModel();
      assertNull(counter1);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn((ExpandoBridge) null).when(counter0).getExpandoBridge();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      ExpandoBridge expandoBridge0 = counterWrapper0.getExpandoBridge();
      assertNull(expandoBridge0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(counter0).isEscapedModel();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      boolean boolean0 = counterWrapper0.isEscapedModel();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(counter0).toXmlString();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      String string0 = counterWrapper0.toXmlString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(counter0).toString();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      Counter counter1 = counterWrapper0.getWrappedCounter();
      assertSame(counter1, counter0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      counterWrapper0.hashCode();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(counter0).compareTo(any(com.liferay.counter.model.Counter.class));
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      int int0 = counterWrapper0.compareTo((Counter) counterWrapper0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      String string0 = counterWrapper0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(counter0).getName();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      String string0 = counterWrapper0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      Object object0 = counterWrapper0.clone();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CounterWrapper counterWrapper0 = new CounterWrapper((Counter) null);
      // Undeclared exception!
      try { 
        counterWrapper0.isCachedModel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.counter.model.CounterWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(counter0).getCurrentId();
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      long long0 = counterWrapper0.getCurrentId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Counter counter0 = mock(Counter.class, new ViolatedAssumptionAnswer());
      CounterWrapper counterWrapper0 = new CounterWrapper(counter0);
      counterWrapper0.setNew(true);
  }
}
