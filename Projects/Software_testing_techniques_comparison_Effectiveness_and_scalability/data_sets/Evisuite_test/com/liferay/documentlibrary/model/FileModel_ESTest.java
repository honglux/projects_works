/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 08 22:34:23 GMT 2017
 */

package com.liferay.documentlibrary.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.liferay.documentlibrary.model.FileModel;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FileModel_ESTest extends FileModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      fileModel0.setUserId(715L);
      long long0 = fileModel0.getUserId();
      assertEquals(715L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      fileModel0.setUserId((-480L));
      long long0 = fileModel0.getUserId();
      assertEquals((-480L), long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      fileModel0.setRepositoryId(1L);
      long long0 = fileModel0.getRepositoryId();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      fileModel0.setRepositoryId((-1L));
      long long0 = fileModel0.getRepositoryId();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      fileModel0.setProperties("ZVlm>ufeFifz03m*");
      String string0 = fileModel0.getProperties();
      assertEquals("ZVlm>ufeFifz03m*", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      fileModel0.setProperties("");
      String string0 = fileModel0.getProperties();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      fileModel0.setPortletId("Uj;[*a rm");
      String string0 = fileModel0.getPortletId();
      assertEquals("Uj;[*a rm", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      MockDate mockDate0 = new MockDate();
      fileModel0.setModifiedDate(mockDate0);
      Date date0 = fileModel0.getModifiedDate();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      fileModel0.setGroupId(1166L);
      long long0 = fileModel0.getGroupId();
      assertEquals(1166L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      fileModel0.setGroupId((-310L));
      long long0 = fileModel0.getGroupId();
      assertEquals((-310L), long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      fileModel0.setFileName(";h!34|NV?jZWi");
      String string0 = fileModel0.getFileName();
      assertEquals(";h!34|NV?jZWi", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      fileModel0.setFileName("");
      String string0 = fileModel0.getFileName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      fileModel0.setFileEntryId(2720L);
      long long0 = fileModel0.getFileEntryId();
      assertEquals(2720L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      fileModel0.setFileEntryId((-383L));
      long long0 = fileModel0.getFileEntryId();
      assertEquals((-383L), long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      fileModel0.setCompanyId(1L);
      long long0 = fileModel0.getCompanyId();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      fileModel0.setCompanyId((-47L));
      long long0 = fileModel0.getCompanyId();
      assertEquals((-47L), long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      String[] stringArray0 = new String[4];
      fileModel0.setAssetTagNames(stringArray0);
      String[] stringArray1 = fileModel0.getAssetTagNames();
      assertSame(stringArray1, stringArray0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      long[] longArray0 = new long[2];
      fileModel0.setAssetCategoryIds(longArray0);
      long[] longArray1 = fileModel0.getAssetCategoryIds();
      assertSame(longArray1, longArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      long[] longArray0 = new long[0];
      fileModel0.setAssetCategoryIds(longArray0);
      long[] longArray1 = fileModel0.getAssetCategoryIds();
      assertArrayEquals(new long[] {}, longArray1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      String string0 = fileModel0.getFileName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      fileModel0.setPortletId("");
      String string0 = fileModel0.getPortletId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      long long0 = fileModel0.getUserId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      long[] longArray0 = fileModel0.getAssetCategoryIds();
      assertNull(longArray0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      long long0 = fileModel0.getCompanyId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      long long0 = fileModel0.getRepositoryId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      String[] stringArray0 = new String[0];
      fileModel0.setAssetTagNames(stringArray0);
      String[] stringArray1 = fileModel0.getAssetTagNames();
      assertSame(stringArray1, stringArray0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      Date date0 = fileModel0.getModifiedDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      String string0 = fileModel0.getProperties();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      String[] stringArray0 = fileModel0.getAssetTagNames();
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      String string0 = fileModel0.getPortletId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      long long0 = fileModel0.getFileEntryId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileModel fileModel0 = new FileModel();
      long long0 = fileModel0.getGroupId();
      assertEquals(0L, long0);
  }
}
